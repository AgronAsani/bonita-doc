{"version":3,"sources":["webpack:///./src/main.ts","webpack:///./src/app/home/home.css","webpack:///./src/app/home/home.html","webpack:///./src/app/app.ts","webpack:///./src/app/directives/router-active.ts","webpack:///./src/app/home/directives/x-large.ts","webpack:///./src/app/home/home.ts","webpack:///./src/app/home/providers/title.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["/*\r\n * Providers provided by Angular\r\n */\r\nimport {provide} from 'angular2/core';\r\nimport {bootstrap, ELEMENT_PROBE_PROVIDERS} from 'angular2/platform/browser';\r\nimport {ROUTER_PROVIDERS, LocationStrategy, HashLocationStrategy} from 'angular2/router';\r\nimport {HTTP_PROVIDERS} from 'angular2/http';\r\n\r\n/*\r\n * App Component\r\n * our top level component that holds all of our components\r\n */\r\nimport {App} from './app/app';\r\n/*\r\n * Bootstrap our Angular app with a top level component `App` and inject\r\n * our Services and Providers into Angular's dependency injection\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function main() {\r\n  bootstrap(App, [\r\n    ...('production' === process.env.ENV ? [] : ELEMENT_PROBE_PROVIDERS),\r\n    ...HTTP_PROVIDERS,\r\n    ...ROUTER_PROVIDERS,\r\n    provide(LocationStrategy, { useClass: HashLocationStrategy })\r\n  ])\r\n    .catch(err => console.error(err));\r\n});\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/main.ts\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.css\n ** module id = 313\n ** module chunks = 1\n **/","module.exports = \"<div>\\n  <span x-large>Your Content Here</span>\\n  <input type=\\\"text\\\" [value]=\\\"title.value\\\" (input)=\\\"title.value = $event.target.value\\\" autofocus>\\n  <!--\\n    Rather than wiring up two-way data-binding ourselves\\n    we can use Angular's [(ngModel)] syntax\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"title.value\\\">\\n  -->\\n\\n  <pre>this.title = {{ title | json }}</pre>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.html\n ** module id = 314\n ** module chunks = 1\n **/","/*\r\n * Angular 2 decorators and services\r\n */\r\nimport {Component} from 'angular2/core';\r\nimport {RouteConfig, Router, ROUTER_DIRECTIVES} from 'angular2/router';\r\nimport {FORM_PROVIDERS} from 'angular2/common';\r\n\r\nimport {RouterActive} from './directives/router-active';\r\nimport {Home} from './home/home';\r\n\r\n/*\r\n * App Component\r\n * Top Level Component\r\n */\r\n@Component({\r\n  selector: 'app',\r\n  providers: [...FORM_PROVIDERS],\r\n  directives: [...ROUTER_DIRECTIVES, RouterActive],\r\n  pipes: [],\r\n  styles: [`\r\n    nav ul {\r\n      display: inline;\r\n      list-style-type: none;\r\n      margin: 0;\r\n      padding: 0;\r\n      width: 60px;\r\n    }\r\n    nav li {\r\n      display: inline;\r\n    }\r\n    nav li.active {\r\n      background-color: lightgray;\r\n    }\r\n  `],\r\n  template: `\r\n    <header>\r\n      <nav>\r\n        <h1>Hello {{ name }}</h1>\r\n        <ul>\r\n          <li router-active=\"active\">\r\n            <a [routerLink]=\" ['Index'] \">Index</a>\r\n          </li>\r\n          <li router-active=\"active\">\r\n            <a [routerLink]=\" ['Home'] \">Home</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n\r\n    <main>\r\n      <router-outlet>Random</router-outlet>\r\n    </main>\r\n\r\n    <footer>\r\n      bonita-doc by <a href=\"mailto:julien.reboul@bonitasoft.com\" target=\"_top\">Julien Reboul</a>\r\n    </footer>\r\n  `\r\n})\r\n@RouteConfig([\r\n  { path: '/', component: Home, name: 'Index' },\r\n  { path: '/home', component: Home, name: 'Home' },\r\n  { path: '/**', redirectTo: ['Index'] }\r\n])\r\nexport class App {\r\n  name = 'bonita-doc';\r\n  constructor() {\r\n\r\n  }\r\n}\r\n\r\n/*\r\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\r\n * more angular app examples that you may copy/paste\r\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\r\n * For help or questions please contact us at @AngularClass on twitter\r\n * or our chat on Slack at https://AngularClass.com/slack-join\r\n * or via chat on Gitter at https://gitter.im/AngularClass/angular2-webpack-starter\r\n */\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/app.ts\n **/","import {Router} from 'angular2/router';\r\nimport {isPresent} from 'angular2/src/facade/lang';\r\nimport {Directive, Query, QueryList, Attribute, ElementRef, Renderer} from 'angular2/core';\r\nimport {Instruction, RouterLink} from 'angular2/router';\r\n\r\n/**\r\n * RouterActive dynamically finds the first element with routerLink and toggles the active class\r\n *\r\n * ## Use\r\n *\r\n * ```\r\n * <li router-active=\"active\"><a [routerLink]=\" ['/Home'] \">Home</a></li>\r\n * <li [routerActive]=\" activeStringValue \"><a [routerLink]=\" ['/Home'] \">Home</a></li>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[router-active]',\r\n  inputs: ['routerActive']\r\n})\r\nexport class RouterActive {\r\n  routerActive: string = null;\r\n  routerActiveAttr: string = 'active';\r\n\r\n  constructor(\r\n    router: Router,\r\n    element: ElementRef,\r\n    renderer: Renderer,\r\n    @Query(RouterLink) routerLink: QueryList<RouterLink>,\r\n    @Attribute('router-active') routerActiveAttr: string) {\r\n\r\n    router.subscribe(() => {\r\n      let active = (<any>routerLink).first.isRouteActive;\r\n      renderer.setElementClass(element.nativeElement, this._attrOrProp(), active);\r\n    });\r\n  }\r\n  private _attrOrProp() {\r\n    return isPresent(this.routerActive) ? this.routerActive : this.routerActiveAttr;\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/directives/router-active.ts\n **/","import {Directive, Component, ElementRef, Renderer} from 'angular2/core';\r\n/*\r\n * Directive\r\n * XLarge is a simple directive to show how one is made\r\n */\r\n@Directive({\r\n  selector: '[x-large]' // using [ ] means selecting attributes\r\n})\r\nexport class XLarge {\r\n  constructor(element: ElementRef, renderer: Renderer) {\r\n    // simple DOM manipulation to set font size to x-large\r\n    // `nativeElement` is the direct reference to the DOM element\r\n    // element.nativeElement.style.fontSize = 'x-large';\r\n\r\n    // for server/webworker support use the renderer\r\n    renderer.setElementStyle(element.nativeElement, 'fontSize', 'x-large');\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/home/directives/x-large.ts\n **/","import {Component} from 'angular2/core';\r\nimport {FORM_DIRECTIVES} from 'angular2/common';\r\nimport {Http} from 'angular2/http';\r\n\r\nimport {Title} from './providers/title';\r\nimport {XLarge} from './directives/x-large';\r\n\r\n@Component({\r\n  // The selector is what angular internally uses\r\n  // for `document.querySelectorAll(selector)` in our index.html\r\n  // where, in this case, selector is the string 'app'\r\n  selector: 'home',  // <home></home>\r\n  // We need to tell Angular's Dependency Injection which providers are in our app.\r\n  providers: [\r\n    Title\r\n  ],\r\n  // We need to tell Angular's compiler which directives are in our template.\r\n  // Doing so will allow Angular to attach our behavior to an element\r\n  directives: [\r\n    ...FORM_DIRECTIVES,\r\n    XLarge\r\n  ],\r\n  // We need to tell Angular's compiler which custom pipes are in our template.\r\n  pipes: [],\r\n  // Our list of styles in our component. We may add more to compose many styles together\r\n  styles: [require('./home.css')],\r\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\r\n  template: require('./home.html')\r\n})\r\nexport class Home {\r\n  // TypeScript public modifiers\r\n  constructor(public title: Title, public http: Http) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('hello Home component');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/home/home.ts\n **/","import {Injectable} from 'angular2/core';\r\n\r\n@Injectable()\r\nexport class Title {\r\n  value = 'Angular 2';\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/home/providers/title.ts\n **/"],"sourceRoot":""}